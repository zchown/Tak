Loading environment variables...
Configuring tests...
Running enabled tests...
Running board tests ...

Board Module
  createEmptyBoard
    creates a 4x4 board [✔]
  getTopPiece
    returns Nothing for an empty square [✔]
    returns the top piece of a non-empty stack [✔]
  addToStack
    adds a piece to an empty stack [✔]
    prevents adding to a non-flat top piece [✔]
  getAllPieces
    returns all pieces of a specific color [✔]
  getPlaced
    correctly counts placed pieces [✔]
  letterToCol and colToLetter
    converts between letters and column numbers [✔]
  checkGameResult
    handles 4x4 full board draw [✔]
    detects non full board [✔]
    detects full board [✔]
    detects when game is not over [✔]
  findRoad
    detects a white road through mixed paths [✔]
    detects a black road through mixed paths [✔]
    prevents road through standing stones [✔]

Finished in 0.0008 seconds
15 examples, 0 failures
Running TPS tests...

TPS Parsing
  parses an empty 4x4 starting board correctly [✔]
  parses a 5x5 starting board correctly [✔]
  removes TPS brackets and cleans input correctly [✔]
  parses turn and move number correctly [✔]
  parses easy board [✔]
  handles invalid TPS format (missing move number) [✔]
  handles invalid TPS format (extra component) [✔]
  handles invalid move number (non-numeric) [✔]
  handles invalid piece (invalid character) [✔]
  handles invalid piece (invalid character) [✔]
  handles invalid board size (inconsistent rows) [✔]
  handles invalid square format (invalid square) [✔]
  handles empty input [✔]
Board to TPS Conversion
  converts an empty 4x4 board to TPS correctly [✔]
  converts a 6x6 board with pieces to TPS correctly [✔]
  converts a 6x6 board with pieces to TPS correctly [✔]

Finished in 0.0007 seconds
16 examples, 0 failures
Running PTN tests...

PTN Parsing
  parseSingleMove
    parses a flat placement for White [✔]
    parses a standing placement for White [✔]
    parses a capstone placement for White [✔]
    parses a basic slide move for White [✔]
    parses a slide move with multiple drops for White [✔]
    fails to parse an invalid move format [✔]
  parseMovePair
    parses a move pair with White and Black moves [✔]
    parses a move pair with only White's move (partial move) [✔]
    fails to parse a move pair with an invalid format [✔]
    fails to parse a move pair with an invalid White move [✔]
    fails to parse a move pair with an invalid Black move [✔]
  parsePTN
    parses a full PTN string with metadata and moves [✔]
    parses a PTN string with a partial move (only White's move) [✔]
    parses a PTN string with missing metadata [✔]
    fails to parse a PTN string with invalid moves [✔]

Finished in 0.0006 seconds
15 examples, 0 failures
Running move tests...

Move Validation
  should allow placing a flat stone on an empty square [✔]
  should reject placing a flat stone on an occupied square [✔]
  should allow sliding a stack within the board boundaries [✔]
  should reject sliding a stack off the board [✔]
  should reject slide when a capstone is in the way [✔]
  should reject slide when a standing piece is in the way [✔]
  basic capstone slide [✔]
  capstone with crush [✔]
  capstone crush set incorrectly [✔]
  should reject slide with invalid drop counts [✔]
  should reject slide with insufficient pieces in stack [✔]
Making Moves
  should place a flat stone on the board [✔]
  should slide a stack to an adjacent square [✔]
  should handle complex slides with multiple drops [✔]
  reject slides that would exceed board boundaries with multiple drops [✔]
  should handle slides with standing stones in the path [✔]
  should allow slides that crush standing stones with a capstone [✔]
  should not allow crush with flat and cap stone [✔]
Undo Moves
  should undo a flat stone placement [✔]
  should undo a standing stone placement [✔]
  should undo a capstone placement [✔]
  should undo a slide move [✔]
  should reject undoing a slide with invalid drop counts [✔]
  should reject undoing a slide with invalid drop counts [✔]
  should reject undoing a slide move with impossible drops [✔]
  should reject undoing a slide with beyond limit drops [✔]
  should reject undoing a slide with insufficient pieces [✔]
Move Generation
  should generate all valid first moves [✔]
  should generate all valid placement moves for a player [✔]
  should generate all valid slide moves for a player [✔]
  should generate valid slides for a stack of stones [✔]
  should generate valid slides with crushing for a capstone [✔]
Edge Cases
  should reject placing a stone outside the board boundaries [✔]
  should reject sliding a stack outside the board boundaries [✔]
  should reject sliding a stack with invalid drop counts [✔]
  should reject sliding a stack with insufficient pieces [✔]
  should reject sliding a stack with a standing stone in the way [✔]
  should reject sliding a stack with a capstone in the way [✔]
  should reject sliding a stack with incorrect crush setting [✔]
Complex TPS Positions
  should handle a complex TPS position with multiple stacks [✔]
  should handle a TPS position with a capstone and standing stones [✔]
  should reject a slide in a TPS position with a standing stone in the way [✔]
  should handle a TPS position with a complex slide and multiple drops [✔]
  should reject a slide in a TPS position with insufficient pieces [✔]

Finished in 0.0017 seconds
44 examples, 0 failures
Running general tests...
Found PTN files: ["test/ptn/test1","test/ptn/test4","test/ptn/test3","test/ptn/test2","test/ptn/test5"]
Board state: "x6/x6/x6/x6/x6/x6"
Validating move: PlaceFlat (Position (6,6),Black)

Board state: "x5,2/x6/x6/x6/x6/x6"
Validating move: PlaceFlat (Position (1,6),White)

Board state: "1,x4,2/x6/x6/x6/x6/x6"
Validating move: PlaceFlat (Position (1,1),White)

Board state: "1,x4,2/x6/x6/x6/x6/1,x5"
Validating move: PlaceFlat (Position (6,1),Black)

Board state: "1,x4,2/x6/x6/x6/x6/1,x4,2"
Validating move: PlaceFlat (Position (1,4),White)

Board state: "1,x4,2/x6/1,x5/x6/x6/1,x4,2"
Validating move: PlaceFlat (Position (2,4),Black)

Board state: "1,x4,2/x6/1,2,x4/x6/x6/1,x4,2"
Validating move: Slide (Position (1,4),1,Right,[1],White,False)

Board state: "1,x4,2/x6/x,21,x4/x6/x6/1,x4,2"
Validating move: PlaceFlat (Position (6,4),Black)

Board state: "1,x4,2/x6/x,21,x3,2/x6/x6/1,x4,2"
Validating move: PlaceStanding (Position (6,3),White)

Board state: "1,x4,2/x6/x,21,x3,2/x5,1S/x6/1,x4,2"
Validating move: PlaceFlat (Position (4,4),Black)

Board state: "1,x4,2/x6/x,21,x,2,x,2/x5,1S/x6/1,x4,2"
Validating move: PlaceFlat (Position (1,4),White)

Board state: "1,x4,2/x6/1,21,x,2,x,2/x5,1S/x6/1,x4,2"
Validating move: PlaceCap (Position (5,3),Black)

Board state: "1,x4,2/x6/1,21,x,2,x,2/x4,2C,1S/x6/1,x4,2"
Validating move: PlaceCap (Position (6,5),White)

Board state: "1,x4,2/x5,1C/1,21,x,2,x,2/x4,2C,1S/x6/1,x4,2"
Validating move: PlaceFlat (Position (2,2),Black)

Board state: "1,x4,2/x5,1C/1,21,x,2,x,2/x4,2C,1S/x,2,x4/1,x4,2"
Validating move: PlaceFlat (Position (2,1),White)

Board state: "1,x4,2/x5,1C/1,21,x,2,x,2/x4,2C,1S/x,2,x4/1,1,x3,2"
Validating move: PlaceFlat (Position (4,3),Black)

Board state: "1,x4,2/x5,1C/1,21,x,2,x,2/x3,2,2C,1S/x,2,x4/1,1,x3,2"
Validating move: PlaceFlat (Position (1,3),White)

Board state: "1,x4,2/x5,1C/1,21,x,2,x,2/1,x2,2,2C,1S/x,2,x4/1,1,x3,2"
Validating move: PlaceFlat (Position (1,5),Black)

Board state: "1,x4,2/2,x4,1C/1,21,x,2,x,2/1,x2,2,2C,1S/x,2,x4/1,1,x3,2"
Validating move: Slide (Position (1,6),1,Down,[1],White,False)

Board state: "x5,2/21,x4,1C/1,21,x,2,x,2/1,x2,2,2C,1S/x,2,x4/1,1,x3,2"
Validating move: PlaceStanding (Position (1,2),Black)

Board state: "x5,2/21,x4,1C/1,21,x,2,x,2/1,x2,2,2C,1S/2S,2,x4/1,1,x3,2"
Validating move: Slide (Position (2,1),1,Up,[1],White,False)

Board state: "x5,2/21,x4,1C/1,21,x,2,x,2/1,x2,2,2C,1S/2S,21,x4/1,x4,2"
Validating move: PlaceFlat (Position (1,6),Black)

Board state: "2,x4,2/21,x4,1C/1,21,x,2,x,2/1,x2,2,2C,1S/2S,21,x4/1,x4,2"
Validating move: Slide (Position (1,5),2,Up,[1],White,False)

